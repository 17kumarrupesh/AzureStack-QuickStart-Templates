{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.613.9944",
      "templateHash": "313291512184700301"
    }
  },
  "parameters": {
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_D1",
      "metadata": {
        "description": "Size of VMs in the VM Scale Set."
      }
    },
    "osImageSku": {
      "type": "string",
      "defaultValue": "2016-Datacenter",
      "allowedValues": [
        "2012-R2-Datacenter",
        "2016-Datacenter-Server-Core",
        "2016-Datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the VM. This will pick a fully patched image of this given Windows version. Allowed values: 2008-R2-SP1, 2012-Datacenter, 2012-R2-Datacenter."
      }
    },
    "osImagePublisher": {
      "type": "string",
      "defaultValue": "MicrosoftWindowsServer",
      "metadata": {
        "description": "Maps to the publisher in the Azure Stack Platform Image Repository manifest file."
      }
    },
    "osImageOffer": {
      "type": "string",
      "defaultValue": "WindowsServer",
      "metadata": {
        "description": "Maps to the Offer in the Azure Stack Platform Image Repository manifest file."
      }
    },
    "vmssName": {
      "type": "string",
      "defaultValue": "[substring(format('vmss{0}', uniqueString(replace(resourceGroup().id, '-', ''))), 0, 8)]",
      "maxLength": 10,
      "minLength": 3,
      "metadata": {
        "description": "String used as a base for naming resources. Must be 3-10 characters in length and globally unique across Azure Stack. A hash is prepended to this string for some resources, and resource-specific information is appended."
      }
    },
    "instanceCount": {
      "type": "int",
      "defaultValue": 2,
      "maxValue": 20,
      "metadata": {
        "description": "Number of VM instances (20 or less)."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Admin username on all VMs."
      }
    },
    "adminPassword": {
      "type": "secureString",
      "defaultValue": "[format('Subscription#{0}', subscription().subscriptionId)]",
      "metadata": {
        "description": "Admin password on all VMs."
      }
    },
    "artifactsLocation": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/Azure/azurestack-quickstart-templates/master/201-vmss-windows-extension",
      "metadata": {
        "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
      }
    }
  },
  "functions": [],
  "variables": {
    "location": "[resourceGroup().location]",
    "vnetName": "[toLower(format('vnet{0}', uniqueString(resourceGroup().id)))]",
    "subnetName": "[toLower(format('subnet{0}', uniqueString(resourceGroup().id)))]",
    "storageAccountName": "[toLower(format('SA{0}', uniqueString(resourceGroup().id)))]",
    "storageAccountContainerName": "[toLower(format('SC{0}', uniqueString(resourceGroup().id)))]",
    "storageAccountType": "Standard_LRS",
    "OSDiskName": "osdisk",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]",
    "subnetRef": "[format('{0}/subnets/{1}', variables('vnetID'), variables('subnetName'))]",
    "publicIPAddressName": "[toLower(format('pip{0}', uniqueString(resourceGroup().id)))]",
    "vmssDomainName": "[toLower(format('pubdns{0}', uniqueString(resourceGroup().id)))]",
    "loadBalancerName": "[format('LB{0}', uniqueString(resourceGroup().id))]",
    "loadBalancerFrontEndName": "[format('LBFrontEnd{0}', uniqueString(resourceGroup().id))]",
    "loadBalancerBackEndName": "[format('LBBackEnd{0}', uniqueString(resourceGroup().id))]",
    "loadBalancerProbeName": "[format('LBHttpProbe{0}', uniqueString(resourceGroup().id))]",
    "loadBalancerNatPoolName": "[format('LBNatPool{0}', uniqueString(resourceGroup().id))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "[variables('location')]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2018-11-01",
      "name": "[variables('vnetName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "10.0.0.0/24"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2018-11-01",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "dnsSettings": {
          "domainNameLabel": "[variables('vmssDomainName')]"
        }
      }
    },
    {
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2018-11-01",
      "name": "[variables('loadBalancerName')]",
      "location": "[variables('location')]",
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "[variables('loadBalancerFrontEndName')]",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "[variables('loadBalancerBackEndName')]"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "roundRobinLBRule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('loadBalancerName'), variables('loadBalancerFrontEndName'))]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('loadBalancerName'), variables('loadBalancerBackEndName'))]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 5,
              "probe": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('loadBalancerName'), variables('loadBalancerProbeName'))]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "[variables('loadBalancerProbeName')]",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ],
        "inboundNatPools": [
          {
            "name": "[variables('loadBalancerNatPoolName')]",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('loadBalancerName'), variables('loadBalancerFrontEndName'))]"
              },
              "protocol": "Tcp",
              "frontendPortRangeStart": 50000,
              "frontendPortRangeEnd": 50019,
              "backendPort": 3389
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2020-06-01",
      "name": "[parameters('vmssName')]",
      "sku": {
        "name": "[parameters('vmSku')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "location": "[variables('location')]",
      "properties": {
        "upgradePolicy": {
          "mode": "Manual"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "osDisk": {
              "vhdContainers": [
                "[format('{0}{1}', reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('storageAccountContainerName'))]"
              ],
              "name": "[variables('OSDiskName')]",
              "caching": "ReadOnly",
              "createOption": "FromImage"
            },
            "imageReference": {
              "publisher": "[parameters('osImagePublisher')]",
              "offer": "[parameters('osImageOffer')]",
              "sku": "[parameters('osImageSku')]",
              "version": "latest"
            }
          },
          "osProfile": {
            "computerNamePrefix": "[parameters('vmssName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "nic",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig",
                      "properties": {
                        "subnet": {
                          "id": "[variables('subnetRef')]"
                        },
                        "loadBalancerBackendAddressPools": [
                          {
                            "id": "[reference(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))).backendAddressPools[0].id]"
                          }
                        ],
                        "loadBalancerInboundNatPools": [
                          {
                            "id": "[reference(resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))).inboundNatPools[0].id]"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            ]
          },
          "extensionProfile": {
            "extensions": [
              {
                "name": "customScript",
                "properties": {
                  "publisher": "Microsoft.Compute",
                  "type": "CustomScriptExtension",
                  "settings": {
                    "fileUris": [
                      "[format('{0}/scripts/helloWorld.ps1', parameters('artifactsLocation'))]"
                    ]
                  },
                  "typeHandlerVersion": "1.8",
                  "autoUpgradeMinorVersion": true,
                  "protectedSettings": {
                    "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File helloWorld.ps1"
                  }
                }
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/loadBalancers', variables('loadBalancerName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('vnetName'))]"
      ]
    }
  ]
}